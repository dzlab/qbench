# see http://docs.ansible.com/ansible/ec2_module.html
---
# create security group
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Kafka cluster security group
      ec2_group:
        name: kafka-cluster-sg
        description: EC2 group for Kafka cluster
        vpc_id: vpc-be157ddb
        region: eu-west-1
        #aws_secret_key: SECRET
        #aws_access_key: ACCESS
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 9092
            to_port: 9092
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 2181
            to_port: 2181
            cidr_ip: 0.0.0.0/0
            # kafka default port, see https://kafka.apache.org/08/configuration.html
          - proto: tcp
            from_port: 6667
            to_port: 6667
            cidr_ip: 0.0.0.0/0

# launch zookeeper instances
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Provision a set of instances for zookeeper
      ec2:
         key_name: data-pipeline-dev
         region: eu-west-1
         group: kafka-cluster-sg
         instance_type: m3.large
         image: ami-33734044
         vpc_subnet_id: subnet-a9a28ade
         assign_public_ip: yes
         wait: true
         wait_timeout: 500
         exact_count: 1
         count_tag:
            Name: zookeeper
         instance_tags:
            Name: zookeeper
      register: ec2
    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=zookeeper_hosts
      with_items: ec2.instances
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances


# launch Kafka instances
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Provision a set of instances for kafka
      ec2:
         key_name: data-pipeline-dev
         region: eu-west-1
         group: kafka-cluster-sg
         instance_type: m3.2xlarge
         image: ami-33734044
         vpc_subnet_id: subnet-a9a28ade
         assign_public_ip: yes
         wait: true
         wait_timeout: 500
         exact_count: 3
         count_tag:
            Name: kafka
         instance_tags:
            Name: kafka
      register: ec2
    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=kafka_hosts
      with_items: ec2.instances
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

# install zookeeper
- hosts: zookeeper_hosts
  name: configuration Kafka hosts
  user: centos
  gather_facts: true
  tasks:
    - name: install supervisor
      become: yes
      shell: easy_install supervisor   
    - name: Copying supervisord config file
      copy: src=zookeeper-supervisord.conf dest=/tmp/supervisord.conf mode=0644
    - name: Creating default supervisord config 
      shell: echo_supervisord_conf  > /tmp/default.conf
    - name: Moving supervisord config to default location  
      become: yes
      become_user: root
      shell: cat /tmp/default.conf /tmp/supervisord.conf >> /etc/supervisord.conf
    - name: Run script for Kafka install
      script: install_prerequisites.sh
    - name: Run supervisor
      become: yes
      shell: supervisord -c /etc/supervisord.conf

# install kafka
- hosts: kafka_hosts
  name: configuration Kafka hosts
  environment:
    ZOOKEEPER_HOST: "{{ hostvars[groups['zookeeper_hosts'][0]]['ansible_eth0']['ipv4']['address'] }}"
    SECOR_INSTALL_DIR: /opt/secor
  user: centos
  gather_facts: true
  tasks:
    - name: Copy bash file that exports env variables
      copy: src=envs dest=~/envs
    - name: Source bash file
      shell: source ~/envs
    - name: install supervisor
      become: yes
      shell: easy_install supervisor
    - name: Copying supervisord config file
      copy: src=kafka-supervisord.conf dest=/tmp/supervisord.conf mode=0644
    - name: Creating default supervisord config 
      shell: echo_supervisord_conf  > /tmp/default.conf
    - name: Moving supervisord config to default location  
      become: yes
      become_user: root
      shell: cat /tmp/default.conf /tmp/supervisord.conf >> /etc/supervisord.conf
    - name: Copying Secor archive file
      copy: src=secor-0.16-SNAPSHOT-bin.tar.gz dest=~/secor-0.16-SNAPSHOT-bin.tar.gz
    - name: Copying Secor starter script
      copy: src=start_secor.sh dest=~/start_secor.sh mode=0755
    - name: Run script for Kafka install
      script: install_prerequisites.sh
    - name: Run script for Secor install
      script: install_secor.sh
    - name: Run supervisor
      become: yes
      shell: supervisord -c /etc/supervisord.conf

# setup kafka topic
- hosts: zookeeper_hosts
  name: configuration Kafka topic
  user: centos
  gather_facts: true
  tasks:
    - name: Setup topic
      become: yes
      shell: cd /opt/kafka && bin/kafka-topics.sh --create --zookeeper {{ ansible_eth0.ipv4.address }}:2181 --replication-factor 1 --partitions 12 --topic auction_stream
      run_once: yes  

- hosts: kafka_hosts
  name: Starting Supervisor on Kafka hosts
  user: centos
  gather_facts: false
  tasks:
    - name: Run supervisor
      become: yes
      shell: supervisorctl restart secor

